local ScreenGui = Instance.new("ScreenGui")
local main = Instance.new("Frame")
local label = Instance.new("TextLabel")
local Hitbox = Instance.new("TextButton")

ScreenGui.Parent = game.CoreGui

label.Name = "label"
label.Parent = main
label.BackgroundColor3 = Color3.fromRGB(139,0,0)
label.Size = UDim2.new(0, 100, 0, 20)
label.Font = Enum.Font.SourceSans
label.TextColor3 = Color3.fromRGB(0, 0, 0)
label.TextScaled = true
label.TextSize = 5.000
label.TextWrapped = true

main.Name = "main"
main.Parent = ScreenGui
main.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
main.Position = UDim2.new(0.40427351, 0, 0.34591195, 0)
main.Size = UDim2.new(0, 100, 0, 100)
main.Active = true
main.Draggable = true

Hitbox.Name = "Hitbox"
Hitbox.Parent = main
Hitbox.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Hitbox.Position = UDim2.new(0.114285722, 0, 0.372448981, 0)
Hitbox.Size = UDim2.new(0, 90, 0, 40)
Hitbox.Font = Enum.Font.SourceSans
Hitbox.Text = "Click me"
Hitbox.TextColor3 = Color3.fromRGB(0, 0, 0)
Hitbox.TextSize = 20.000

local function showTextGradually(text, delay)
    for i = 1, #text do
        wait(delay)
        label.Text = text:sub(1, i)
    end
end

local function unlockFPS()
    game:GetService("RunService").RenderStepped:Connect(function()
        game:GetService("RunService").RenderStepped:Fire()
    end)
end

Hitbox.MouseButton1Down:Connect(function()
    _G.HeadSize = 30  -- Aquí puedes ajustar el tamaño de la esfera
    _G.Disabled = true

    game:GetService('RunService').RenderStepped:Connect(function()
        if _G.Disabled then
            for i, v in next, game:GetService('Players'):GetPlayers() do
                if v.Name ~= game:GetService('Players').LocalPlayer.Name then
                    pcall(function()
                        if v.Character and v.Character:FindFirstChild("HumanoidRootPart") then
                            -- Create a sphere around the HumanoidRootPart
                            local sphere = v.Character:FindFirstChild("HitboxSphere")
                            if not sphere then
                                sphere = Instance.new("Part")
                                sphere.Name = "HitboxSphere"
                                sphere.Shape = Enum.PartType.Ball
                                sphere.Material = Enum.Material.Neon
                                sphere.Transparency = 0.7
                                sphere.Anchored = true
                                sphere.CanCollide = false
                                sphere.Parent = v.Character
                            end
                            sphere.Size = Vector3.new(_G.HeadSize, _G.HeadSize, _G.HeadSize)
                            sphere.CFrame = v.Character.HumanoidRootPart.CFrame
                        end
                    end)
                end
            end
        end
    end)
end)

local hue = 0
game:GetService('RunService').RenderStepped:Connect(function()
    hue = (hue + 1) % 360
    Hitbox.BackgroundColor3 = Color3.fromHSV(hue / 360, 1, 1)
    
    -- Cambiar el color de las esferas
    for i, v in next, game:GetService('Players'):GetPlayers() do
        local sphere = v.Character and v.Character:FindFirstChild("HitboxSphere")
        if sphere then
            sphere.BrickColor = BrickColor.new(Color3.fromHSV(hue / 360, 1, 1))
        end
    end
end)

showTextGradually("ESEWE", 0.1)
unlockFPS()

game:GetService("RunService").Stepped:Connect(function()
    game.Workspace.Timestep = 1 / 200
end)

local ToDisable = {
    Parts = true,
    Particles = true,
    VisualEffects = true,
    Textures = true,
    Sky = true
}

local ToEnable = {
    FullBright = false
}

local Stuff = {}

for _, v in next, game:GetDescendants() do
    if ToDisable.Parts then
        if v:IsA("Part") or v:IsA("Union") or v:IsA("BasePart") then
            v.Material = Enum.Material.SmoothPlastic
            table.insert(Stuff, 1, v)
        end
    end
    
    if ToDisable.Particles then
        if v:IsA("ParticleEmitter") or v:IsA("Smoke") or v:IsA("Explosion") or v:IsA("Sparkles") or v:IsA("Fire") then
            v.Enabled = false
            table.insert(Stuff, 1, v)
        end
    end
    
    if ToDisable.VisualEffects then
        if v:IsA("BloomEffect") or v:IsA("BlurEffect") or v:IsA("DepthOfFieldEffect") or v:IsA("SunRaysEffect") then
            v.Enabled = false
            table.insert(Stuff, 1, v)
        end
    end
    
    if ToDisable.Textures then
        if v:IsA("Decal") or v:IsA("Texture") then
            v.Texture = ""
            table.insert(Stuff, 1, v)
        end
    end
    
    if ToDisable.Sky then
        if v:IsA("Sky") then
            v.Parent = nil
            table.insert(Stuff, 1, v)
        end
    end
end

game:GetService("TestService"):Message("Effects Disabler Script : Successfully disabled "..#Stuff.." assets / effects. Settings :")

for i, v in next, ToDisable do
    print(tostring(i)..": "..tostring(v))
end

if ToEnable.FullBright then
    local Lighting = game:GetService("Lighting")
    
    Lighting.FogColor = Color3.fromRGB(255, 255, 255)
    Lighting.FogEnd = math.huge
    Lighting.FogStart = math.huge
    Lighting.Ambient = Color3.fromRGB(255, 255, 255)
    Lighting.Brightness = 5
    Lighting.ColorShift_Bottom = Color3.fromRGB(255, 255, 255)
    Lighting.ColorShift_Top = Color3.fromRGB(255, 255, 255)
    Lighting.OutdoorAmbient = Color3.fromRGB(255, 255, 255)
    Lighting.Outlines = true
end

local function reduceLag()
    wait(1)
end
